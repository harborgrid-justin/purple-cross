# =============================================================================
# Purple Cross - Development Docker Compose Configuration
# =============================================================================
# This configuration is optimized for local development with hot-reload
# For production deployment, use docker-compose.prod.yml
# =============================================================================

version: '3.8'

services:
  # ===========================================================================
  # PostgreSQL Database
  # ===========================================================================
  postgres:
    image: postgres:15-alpine
    container_name: purple-cross-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: purple_cross
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - purple-cross-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d purple_cross"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===========================================================================
  # Redis Cache
  # ===========================================================================
  redis:
    image: redis:7-alpine
    container_name: purple-cross-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - purple-cross-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # ===========================================================================
  # Backend API (Development Mode)
  # ===========================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
      args:
        NODE_ENV: development
    container_name: purple-cross-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/purple_cross?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-key-change-in-production
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:5173
      LOG_LEVEL: debug
      SKIP_MIGRATIONS: "false"
      SEED_DATABASE: "false"
    ports:
      - "3000:3000"
      # Debug port for Node.js inspector
      - "9229:9229"
    volumes:
      # Mount source code for hot reload
      - ./backend/src:/app/src:ro
      - ./backend/prisma:/app/prisma:ro
      - ./backend/tsconfig.json:/app/tsconfig.json:ro
      # Exclude node_modules from host
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - purple-cross-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    # Development uses nodemon for hot reload
    command: npm run dev

  # ===========================================================================
  # Frontend (Development Mode with Vite HMR)
  # ===========================================================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
      args:
        NODE_ENV: development
        VITE_API_BASE_URL: http://localhost:3000/api/v1
    container_name: purple-cross-frontend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:3000/api/v1
    ports:
      - "5173:5173"
    volumes:
      # Mount source code for hot reload
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - ./frontend/index.html:/app/index.html:ro
      - ./frontend/vite.config.ts:/app/vite.config.ts:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
      # Exclude node_modules from host
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - purple-cross-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Vite dev server with HMR
    command: npm run dev

# =============================================================================
# Volumes
# =============================================================================
volumes:
  postgres_data:
    driver: local
    name: purple-cross-postgres-data-dev
  redis_data:
    driver: local
    name: purple-cross-redis-data-dev
  backend_node_modules:
    driver: local
    name: purple-cross-backend-node-modules-dev
  frontend_node_modules:
    driver: local
    name: purple-cross-frontend-node-modules-dev

# =============================================================================
# Networks
# =============================================================================
networks:
  purple-cross-network:
    driver: bridge
    name: purple-cross-network-dev
    ipam:
      config:
        - subnet: 172.28.0.0/16
